<?xml version="1.0"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find robot2_gazebo)/worlds/robot2.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>


  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find staubli_tx90_gazebo)/urdf/tx90.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
   <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" 
        output="screen" respawn="false"
        args="-urdf
              -param robot_description
              -model staubli_tx90_robot
              -x 0.0
              -y 0.0
              -z 0.0
              -R 0.0
              -P 0.0
              -Y 0.0" />

  <!-- ros_control rrbot launch file -->
  <!--include file="$(find robot2_control)/launch/staubli_control.launch" /-->

</launch>
